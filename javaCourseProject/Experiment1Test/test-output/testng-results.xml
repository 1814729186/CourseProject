<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="106" passed="106" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-05-16T02:50:28Z" name="All Test Suite" finished-at="2021-05-16T02:50:29Z" duration-ms="1445">
    <groups>
    </groups>
    <test started-at="2021-05-16T02:50:28Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTest.java" finished-at="2021-05-16T02:50:28Z" duration-ms="38">
      <class name="hust.cs.javacourse.search.index.TermTest">
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTerm;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@76a3e297]" started-at="2021-05-16T02:50:28Z" name="testTestEquals" data-provider="testTerm" finished-at="2021-05-16T02:50:28Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@69930714]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTerm;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@76a3e297]" started-at="2021-05-16T02:50:28Z" name="testTestEquals" data-provider="testTerm" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@7a52f2a2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@76a3e297]" started-at="2021-05-16T02:50:28Z" name="testTestToString" data-provider="testTerm" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@76a3e297]" started-at="2021-05-16T02:50:28Z" name="testGetContent" data-provider="testTerm" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@76a3e297]" started-at="2021-05-16T02:50:28Z" name="testSetContent" data-provider="testTerm" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have no dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have no dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractTerm;, int)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@76a3e297]" started-at="2021-05-16T02:50:28Z" name="testCompareTo" data-provider="testTerm" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@a4102b8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractTerm;, int)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@76a3e297]" started-at="2021-05-16T02:50:28Z" name="testCompareTo" data-provider="testTerm" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@11dc3715]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@76a3e297]" started-at="2021-05-16T02:50:28Z" name="testWriteObject" data-provider="testTerm" finished-at="2021-05-16T02:50:28Z" duration-ms="12" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[search engine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[G:/Daily_Files/Study_Files/gitFolder/CourseProject/javaCourseProject/Experiment1Test/test/config/..//ser/Term.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@76a3e297]" started-at="2021-05-16T02:50:28Z" name="testReadObject" data-provider="testTerm" finished-at="2021-05-16T02:50:28Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[search engine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[G:/Daily_Files/Study_Files/gitFolder/CourseProject/javaCourseProject/Experiment1Test/test/config/..//ser/Term.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.TermTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTest.java -->
    <test started-at="2021-05-16T02:50:28Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTupleTest.java" finished-at="2021-05-16T02:50:28Z" duration-ms="5">
      <class name="hust.cs.javacourse.search.index.TermTupleTest">
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@43738a82]" started-at="2021-05-16T02:50:28Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@4278a03f]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@43738a82]" started-at="2021-05-16T02:50:28Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@2f177a4b]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@43738a82]" started-at="2021-05-16T02:50:28Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@147ed70f]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractTermTuple, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@43738a82]" started-at="2021-05-16T02:50:28Z" name="testTestToString" data-provider="testTermTuple" finished-at="2021-05-16T02:50:28Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ term:Search,freq:1,curPos:100 }
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@61dd025]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
      </class> <!-- hust.cs.javacourse.search.index.TermTupleTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTupleTest.java -->
    <test started-at="2021-05-16T02:50:28Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingTest.java" finished-at="2021-05-16T02:50:28Z" duration-ms="17">
      <class name="hust.cs.javacourse.search.index.PostingTest">
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@4fb64261]" started-at="2021-05-16T02:50:28Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@1677d1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@4fb64261]" started-at="2021-05-16T02:50:28Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@6ac13091]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@4fb64261]" started-at="2021-05-16T02:50:28Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@5e316c74]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@4fb64261]" started-at="2021-05-16T02:50:28Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@48fa0f47]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@4fb64261]" started-at="2021-05-16T02:50:28Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@6d2a209c]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractPosting, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@4fb64261]" started-at="2021-05-16T02:50:28Z" name="testTestToString" data-provider="testPosting" finished-at="2021-05-16T02:50:28Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[10, 100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@75329a49]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testSetDocId(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@4fb64261]" started-at="2021-05-16T02:50:28Z" name="testSetDocId" data-provider="testPosting" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":20,"freq":0,"positions":[]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocId -->
        <test-method signature="testGetDocId(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@4fb64261]" started-at="2021-05-16T02:50:28Z" name="testGetDocId" data-provider="testPosting" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[10, 100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetFreq(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@4fb64261]" started-at="2021-05-16T02:50:28Z" name="testGetFreq" data-provider="testPosting" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[10, 100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFreq -->
        <test-method signature="testGetPositions(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@4fb64261]" started-at="2021-05-16T02:50:28Z" name="testGetPositions" data-provider="testPosting" finished-at="2021-05-16T02:50:28Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[10, 100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[10, 100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPositions -->
        <test-method signature="testSetFreq(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@4fb64261]" started-at="2021-05-16T02:50:28Z" name="testSetFreq" data-provider="testPosting" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":0,"freq":8,"positions":[]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetFreq -->
        <test-method signature="testSetPositions(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@4fb64261]" started-at="2021-05-16T02:50:28Z" name="testSetPositions" data-provider="testPosting" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":0,"freq":0,"positions":[100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetPositions -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractPosting;, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@4fb64261]" started-at="2021-05-16T02:50:28Z" name="testCompareTo" data-provider="testPosting" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@7ee955a8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testSort(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@4fb64261]" started-at="2021-05-16T02:50:28Z" name="testSort" data-provider="testPosting" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[10, 100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[10, 100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractPosting, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@4fb64261]" started-at="2021-05-16T02:50:28Z" name="testWriteObject" data-provider="testPosting" finished-at="2021-05-16T02:50:28Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[10, 100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[G:/Daily_Files/Study_Files/gitFolder/CourseProject/javaCourseProject/Experiment1Test/test/config/..//ser/Posting.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractPosting, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@4fb64261]" started-at="2021-05-16T02:50:28Z" name="testReadObject" data-provider="testPosting" finished-at="2021-05-16T02:50:28Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[10, 100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[G:/Daily_Files/Study_Files/gitFolder/CourseProject/javaCourseProject/Experiment1Test/test/config/..//ser/Posting.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.PostingTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingTest.java -->
    <test started-at="2021-05-16T02:50:28Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingListTest.java" finished-at="2021-05-16T02:50:28Z" duration-ms="10">
      <class name="hust.cs.javacourse.search.index.PostingListTest">
        <test-method signature="testAdd(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@6eceb130]" started-at="2021-05-16T02:50:28Z" name="testAdd" data-provider="testPostingList" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[1, 2, 3, 4]}->{"docId":2,"freq":2,"positions":[5, 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@7c0c77c7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method signature="testTestAdd(hust.cs.javacourse.search.index.AbstractPostingList, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@6eceb130]" started-at="2021-05-16T02:50:28Z" name="testTestAdd" data-provider="testPostingList" finished-at="2021-05-16T02:50:28Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[1, 2, 3, 4]}->{"docId":2,"freq":2,"positions":[5, 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[{"docId":1,"freq":4,"positions":[1, 2, 3, 4]}, {"docId":1,"freq":4,"positions":[2, 4, 3, 1]}, {"docId":2,"freq":2,"positions":[5, 6]}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestAdd -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractPostingList, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@6eceb130]" started-at="2021-05-16T02:50:28Z" name="testTestToString" data-provider="testPostingList" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[1, 2, 3, 4]}->{"docId":2,"freq":2,"positions":[5, 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1534f01b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testIndexOf(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@6eceb130]" started-at="2021-05-16T02:50:28Z" name="testIndexOf" data-provider="testPostingList" finished-at="2021-05-16T02:50:28Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[1, 2, 3, 4]}->{"docId":2,"freq":2,"positions":[5, 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@433d61fb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf -->
        <test-method signature="testGet(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@6eceb130]" started-at="2021-05-16T02:50:28Z" name="testGet" data-provider="testPostingList" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[1, 2, 3, 4]}->{"docId":2,"freq":2,"positions":[5, 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@5cee5251]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method signature="testRemove(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@6eceb130]" started-at="2021-05-16T02:50:28Z" name="testRemove" data-provider="testPostingList" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@5c909414]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@6eceb130]" started-at="2021-05-16T02:50:28Z" name="testContains" data-provider="testPostingList" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[1, 2, 3, 4]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@7adda9cc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testTestIndexOf(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@6eceb130]" started-at="2021-05-16T02:50:28Z" name="testTestIndexOf" data-provider="testPostingList" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[1, 2, 3, 4]}->{"docId":2,"freq":2,"positions":[5, 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@65466a6a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestIndexOf -->
        <test-method signature="testTestRemove(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@6eceb130]" started-at="2021-05-16T02:50:28Z" name="testTestRemove" data-provider="testPostingList" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@4ddced80]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestRemove -->
        <test-method signature="testClear(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.Object)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@6eceb130]" started-at="2021-05-16T02:50:28Z" name="testClear" data-provider="testPostingList" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method signature="testSize(hust.cs.javacourse.search.index.AbstractPostingList, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@6eceb130]" started-at="2021-05-16T02:50:28Z" name="testSize" data-provider="testPostingList" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method signature="testSize(hust.cs.javacourse.search.index.AbstractPostingList, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@6eceb130]" started-at="2021-05-16T02:50:28Z" name="testSize" data-provider="testPostingList" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[1, 2, 3, 4]}->{"docId":2,"freq":2,"positions":[5, 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method signature="testIsEmpty(hust.cs.javacourse.search.index.AbstractPostingList, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@6eceb130]" started-at="2021-05-16T02:50:28Z" name="testIsEmpty" data-provider="testPostingList" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[1, 2, 3, 4]}->{"docId":2,"freq":2,"positions":[5, 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method signature="testIsEmpty(hust.cs.javacourse.search.index.AbstractPostingList, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@6eceb130]" started-at="2021-05-16T02:50:28Z" name="testIsEmpty" data-provider="testPostingList" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method signature="testSort(hust.cs.javacourse.search.index.AbstractPostingList, [Ljava.lang.Integer;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@6eceb130]" started-at="2021-05-16T02:50:28Z" name="testSort" data-provider="testPostingList" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":2,"freq":4,"positions":[5, 9, 7, 8]}->{"docId":3,"freq":2,"positions":[10, 11]}->{"docId":4,"freq":4,"positions":[1, 4, 3, 2]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Integer;@4b14c583]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@6eceb130]" started-at="2021-05-16T02:50:28Z" name="testWriteObject" data-provider="testPostingList" finished-at="2021-05-16T02:50:28Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[1, 2, 3, 4]}->{"docId":2,"freq":2,"positions":[5, 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[G:/Daily_Files/Study_Files/gitFolder/CourseProject/javaCourseProject/Experiment1Test/test/config/..//ser/PostingList.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@6eceb130]" started-at="2021-05-16T02:50:28Z" name="testReadObject" data-provider="testPostingList" finished-at="2021-05-16T02:50:28Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[1, 2, 3, 4]}->{"docId":2,"freq":2,"positions":[5, 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[G:/Daily_Files/Study_Files/gitFolder/CourseProject/javaCourseProject/Experiment1Test/test/config/..//ser/PostingList.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.PostingListTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingListTest.java -->
    <test started-at="2021-05-16T02:50:28Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentTest.java" finished-at="2021-05-16T02:50:28Z" duration-ms="5">
      <class name="hust.cs.javacourse.search.index.DocumentTest">
        <test-method signature="testGetDocId(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@77846d2c]" started-at="2021-05-16T02:50:28Z" name="testGetDocId" data-provider="testDocument" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId = 1,docPath = C:/1.txttuples: 
{ term:aaa,freq:1,curPos:17 }
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetTuples(hust.cs.javacourse.search.index.AbstractDocument, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@77846d2c]" started-at="2021-05-16T02:50:28Z" name="testGetTuples" data-provider="testDocument" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId = 1,docPath = C:/1.txttuples: 
{ term:aaa,freq:1,curPos:17 }
{ term:bbb,freq:1,curPos:30 }
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[{ term:aaa,freq:1,curPos:17 }
, { term:bbb,freq:1,curPos:30 }
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTuples -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.index.AbstractDocument, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@77846d2c]" started-at="2021-05-16T02:50:28Z" name="testGetDocPath" data-provider="testDocument" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId = 1,docPath = C:/1.txttuples: 
{ term:aaa,freq:1,curPos:17 }
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/1.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testSetDocPath(hust.cs.javacourse.search.index.AbstractDocument, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@77846d2c]" started-at="2021-05-16T02:50:28Z" name="testSetDocPath" data-provider="testDocument" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId = 0,docPath = C:/2.txttuples: 
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/2.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocPath -->
        <test-method signature="testSetDocId(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@77846d2c]" started-at="2021-05-16T02:50:28Z" name="testSetDocId" data-provider="testDocument" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId = 2,docPath = nulltuples: 
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocId -->
        <test-method signature="testGetTupleSize(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@77846d2c]" started-at="2021-05-16T02:50:28Z" name="testGetTupleSize" data-provider="testDocument" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId = 1,docPath = C:/1.txttuples: 
{ term:aaa,freq:1,curPos:17 }
{ term:bbb,freq:1,curPos:30 }
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTupleSize -->
        <test-method signature="testAddTuple(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@77846d2c]" started-at="2021-05-16T02:50:28Z" name="testAddTuple" data-provider="testDocument" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId = 1,docPath = C:/1.txttuples: 
{ term:aaa,freq:1,curPos:17 }
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{ term:aaa,freq:1,curPos:17 }
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddTuple -->
        <test-method signature="testGetTuple(hust.cs.javacourse.search.index.AbstractDocument, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@77846d2c]" started-at="2021-05-16T02:50:28Z" name="testGetTuple" data-provider="testDocument" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId = 1,docPath = C:/1.txttuples: 
{ term:aaa,freq:1,curPos:17 }
{ term:bbb,freq:1,curPos:30 }
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[{ term:aaa,freq:1,curPos:17 }
, { term:bbb,freq:1,curPos:30 }
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTuple -->
        <test-method signature="testGetTupleSize(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@77846d2c]" started-at="2021-05-16T02:50:28Z" name="testGetTupleSize" data-provider="testDocument" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId = 1,docPath = C:/1.txttuples: 
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTupleSize -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@77846d2c]" started-at="2021-05-16T02:50:28Z" name="testContains" data-provider="testDocument" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId = 1,docPath = C:/1.txttuples: 
{ term:aaa,freq:1,curPos:17 }
{ term:bbb,freq:1,curPos:30 }
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{ term:bbb,freq:1,curPos:30 }
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@77846d2c]" started-at="2021-05-16T02:50:28Z" name="testContains" data-provider="testDocument" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId = 1,docPath = C:/1.txttuples: 
{ term:aaa,freq:1,curPos:17 }
{ term:bbb,freq:1,curPos:30 }
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{ term:aaa,freq:1,curPos:17 }
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractDocument, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@77846d2c]" started-at="2021-05-16T02:50:28Z" name="testTestToString" data-provider="testDocument" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId = 1,docPath = C:/1.txttuples: 
{ term:aaa,freq:1,curPos:17 }
{ term:bbb,freq:1,curPos:30 }
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1b1473ab]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
      </class> <!-- hust.cs.javacourse.search.index.DocumentTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentTest.java -->
    <test started-at="2021-05-16T02:50:28Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/TermTupleScannerTest.java" finished-at="2021-05-16T02:50:28Z" duration-ms="9">
      <class name="hust.cs.javacourse.search.parse.TermTupleScannerTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.TermTupleScannerTest@319b92f3]" started-at="2021-05-16T02:50:28Z" name="testNext" data-provider="testTermTupleScanner" finished-at="2021-05-16T02:50:28Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.TermTupleScanner@5223e5ee]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[{ term:aaa,freq:1,curPos:0 }
, { term:bbb,freq:1,curPos:1 }
, { term:ccc,freq:1,curPos:2 }
, { term:ddd,freq:1,curPos:3 }
, { term:is,freq:1,curPos:4 }
, { term:f17,freq:1,curPos:5 }
, { term:2020,freq:1,curPos:6 }
, { term:ab,freq:1,curPos:7 }
, { term:ababababababababababab,freq:1,curPos:8 }
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.TermTupleScannerTest@319b92f3]" started-at="2021-05-16T02:50:28Z" name="testNext" data-provider="testTermTupleScanner" finished-at="2021-05-16T02:50:28Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.TermTupleScanner@bef2d72]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[{ term:activity,freq:1,curPos:0 }
, { term:destination,freq:1,curPos:1 }
, { term:emergency,freq:1,curPos:2 }
, { term:26%,freq:1,curPos:3 }
, { term:u571,freq:1,curPos:4 }
, { term:because,freq:1,curPos:5 }
, { term:hence,freq:1,curPos:6 }
, { term:capital,freq:1,curPos:7 }
, { term:i,freq:1,curPos:8 }
, { term:frozen,freq:1,curPos:9 }
, { term:benefits,freq:1,curPos:10 }
, { term:google,freq:1,curPos:11 }
, { term:hahahahahahahahahahahahah,freq:1,curPos:12 }
, { term:ha,freq:1,curPos:13 }
, { term:frozen,freq:1,curPos:14 }
, { term:google,freq:1,curPos:15 }
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.TermTupleScannerTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/TermTupleScannerTest.java -->
    <test started-at="2021-05-16T02:50:28Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/StopWordTermTupleFilterTest.java" finished-at="2021-05-16T02:50:28Z" duration-ms="8">
      <class name="hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@376b4233]" started-at="2021-05-16T02:50:28Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2021-05-16T02:50:28Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@4c9f8c13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[{ term:aaa,freq:1,curPos:0 }
, { term:bbb,freq:1,curPos:1 }
, { term:ccc,freq:1,curPos:2 }
, { term:ddd,freq:1,curPos:3 }
, { term:f17,freq:1,curPos:4 }
, { term:2020,freq:1,curPos:5 }
, { term:ab,freq:1,curPos:6 }
, { term:ababababababababababab,freq:1,curPos:7 }
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@376b4233]" started-at="2021-05-16T02:50:28Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2021-05-16T02:50:28Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@6f96c77]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[{ term:activity,freq:1,curPos:0 }
, { term:destination,freq:1,curPos:1 }
, { term:emergency,freq:1,curPos:2 }
, { term:26%,freq:1,curPos:3 }
, { term:u571,freq:1,curPos:4 }
, { term:capital,freq:1,curPos:7 }
, { term:frozen,freq:1,curPos:9 }
, { term:benefits,freq:1,curPos:10 }
, { term:google,freq:1,curPos:11 }
, { term:hahahahahahahahahahahahah,freq:1,curPos:12 }
, { term:ha,freq:1,curPos:13 }
, { term:frozen,freq:1,curPos:14 }
, { term:google,freq:1,curPos:15 }
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@376b4233]" started-at="2021-05-16T02:50:28Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@5ae50ce6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[{ term:aaa,freq:1,curPos:0 }
, { term:bbb,freq:1,curPos:1 }
, { term:ccc,freq:1,curPos:3 }
, { term:ddd,freq:1,curPos:4 }
, { term:f17,freq:1,curPos:6 }
, { term:2020,freq:1,curPos:7 }
, { term:ab,freq:1,curPos:8 }
, { term:ababababababababababab,freq:1,curPos:10 }
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/StopWordTermTupleFilterTest.java -->
    <test started-at="2021-05-16T02:50:28Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/PatternTermTupleFilterTest.java" finished-at="2021-05-16T02:50:28Z" duration-ms="6">
      <class name="hust.cs.javacourse.search.parse.PatternTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.PatternTermTupleFilterTest@fe18270]" started-at="2021-05-16T02:50:28Z" name="testNext" data-provider="testPatternTermTupleFilter" finished-at="2021-05-16T02:50:28Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@4b5d6a01]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[{ term:aaa,freq:1,curPos:0 }
, { term:bbb,freq:1,curPos:2 }
, { term:ab,freq:1,curPos:3 }
, { term:ccc,freq:1,curPos:4 }
, { term:ddd,freq:1,curPos:5 }
, { term:ababababababababababab,freq:1,curPos:7 }
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.PatternTermTupleFilterTest@fe18270]" started-at="2021-05-16T02:50:28Z" name="testNext" data-provider="testPatternTermTupleFilter" finished-at="2021-05-16T02:50:28Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@4a22f9e2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[{ term:activity,freq:1,curPos:0 }
, { term:destination,freq:1,curPos:1 }
, { term:emergency,freq:1,curPos:2 }
, { term:because,freq:1,curPos:5 }
, { term:hence,freq:1,curPos:6 }
, { term:capital,freq:1,curPos:7 }
, { term:i,freq:1,curPos:8 }
, { term:frozen,freq:1,curPos:9 }
, { term:benefits,freq:1,curPos:10 }
, { term:google,freq:1,curPos:11 }
, { term:hahahahahahahahahahahahah,freq:1,curPos:12 }
, { term:ha,freq:1,curPos:13 }
, { term:frozen,freq:1,curPos:14 }
, { term:google,freq:1,curPos:15 }
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.PatternTermTupleFilterTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/PatternTermTupleFilterTest.java -->
    <test started-at="2021-05-16T02:50:28Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/LengthTermTupleFilterTest.java" finished-at="2021-05-16T02:50:28Z" duration-ms="3">
      <class name="hust.cs.javacourse.search.parse.LengthTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.LengthTermTupleFilterTest@281e3708]" started-at="2021-05-16T02:50:28Z" name="testNext" data-provider="testLengthTermTupleFilter" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.LengthTermTupleFilter@3e2e18f2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[{ term:aaa,freq:1,curPos:0 }
, { term:bbb,freq:1,curPos:1 }
, { term:ccc,freq:1,curPos:3 }
, { term:ddd,freq:1,curPos:4 }
, { term:f17,freq:1,curPos:5 }
, { term:2020,freq:1,curPos:6 }
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.LengthTermTupleFilterTest@281e3708]" started-at="2021-05-16T02:50:28Z" name="testNext" data-provider="testLengthTermTupleFilter" finished-at="2021-05-16T02:50:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.LengthTermTupleFilter@470f1802]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[{ term:activity,freq:1,curPos:0 }
, { term:destination,freq:1,curPos:1 }
, { term:emergency,freq:1,curPos:2 }
, { term:26%,freq:1,curPos:3 }
, { term:u571,freq:1,curPos:4 }
, { term:because,freq:1,curPos:5 }
, { term:hence,freq:1,curPos:6 }
, { term:capital,freq:1,curPos:7 }
, { term:frozen,freq:1,curPos:9 }
, { term:benefits,freq:1,curPos:10 }
, { term:google,freq:1,curPos:11 }
, { term:frozen,freq:1,curPos:14 }
, { term:google,freq:1,curPos:15 }
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.LengthTermTupleFilterTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/LengthTermTupleFilterTest.java -->
    <test started-at="2021-05-16T02:50:28Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/ScannerFilterAllInOneTest.java" finished-at="2021-05-16T02:50:28Z" duration-ms="4">
      <class name="hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest@6d3af739]" started-at="2021-05-16T02:50:28Z" name="testNext" data-provider="testScannerFilterAllInOne" finished-at="2021-05-16T02:50:28Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@2e4b8173]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[{ term:aaa,freq:1,curPos:1 }
, { term:bbb,freq:1,curPos:2 }
, { term:ccc,freq:1,curPos:4 }
, { term:ddd,freq:1,curPos:6 }
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest@6d3af739]" started-at="2021-05-16T02:50:28Z" name="testNext" data-provider="testScannerFilterAllInOne" finished-at="2021-05-16T02:50:28Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@70e8f8e]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[{ term:activity,freq:1,curPos:0 }
, { term:destination,freq:1,curPos:1 }
, { term:emergency,freq:1,curPos:2 }
, { term:capital,freq:1,curPos:7 }
, { term:frozen,freq:1,curPos:9 }
, { term:benefits,freq:1,curPos:10 }
, { term:google,freq:1,curPos:11 }
, { term:frozen,freq:1,curPos:14 }
, { term:google,freq:1,curPos:15 }
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/ScannerFilterAllInOneTest.java -->
    <test started-at="2021-05-16T02:50:28Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentBuilderTest.java" finished-at="2021-05-16T02:50:29Z" duration-ms="549">
      <class name="hust.cs.javacourse.search.index.DocumentBuilderTest">
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@4b53f538]" started-at="2021-05-16T02:50:29Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-05-16T02:50:29Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId = 0,docPath = G:/Daily_Files/Study_Files/gitFolder/CourseProject/javaCourseProject/Experiment1Test/test/config/..//text/2.txttuples: 
{ term:activity,freq:1,curPos:0 }
{ term:destination,freq:1,curPos:1 }
{ term:emergency,freq:1,curPos:2 }
{ term:26%,freq:1,curPos:3 }
{ term:u571,freq:1,curPos:4 }
{ term:because,freq:1,curPos:5 }
{ term:hence,freq:1,curPos:6 }
{ term:capital,freq:1,curPos:7 }
{ term:i,freq:1,curPos:8 }
{ term:frozen,freq:1,curPos:9 }
{ term:benefits,freq:1,curPos:10 }
{ term:google,freq:1,curPos:11 }
{ term:hahahahahahahahahahahahah,freq:1,curPos:12 }
{ term:ha,freq:1,curPos:13 }
{ term:frozen,freq:1,curPos:14 }
{ term:google,freq:1,curPos:15 }
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{ docId = 0,docPath = D:\IdeaWorkspace\SeachEngine/text/2.txttuples: 
{ term:activity,freq:1,curPos:0 }
{ term:destination,freq:1,curPos:1 }
{ term:emergency,freq:1,curPos:2 }
{ term:26%,freq:1,curPos:3 }
{ term:u571,freq:1,curPos:4 }
{ term:because,freq:1,curPos:5 }
{ term:hence,freq:1,curPos:6 }
{ term:capital,freq:1,curPos:7 }
{ term:i,freq:1,curPos:8 }
{ term:frozen,freq:1,curPos:9 }
{ term:benefits,freq:1,curPos:10 }
{ term:google,freq:1,curPos:11 }
{ term:hahahahahahahahahahahahah,freq:1,curPos:12 }
{ term:ha,freq:1,curPos:13 }
{ term:frozen,freq:1,curPos:14 }
{ term:google,freq:1,curPos:15 }
}
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@4b53f538]" started-at="2021-05-16T02:50:29Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-05-16T02:50:29Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId = 0,docPath = G:/Daily_Files/Study_Files/gitFolder/CourseProject/javaCourseProject/Experiment1Test/test/config/..//text/2.txttuples: 
{ term:activity,freq:1,curPos:0 }
{ term:destination,freq:1,curPos:1 }
{ term:emergency,freq:1,curPos:2 }
{ term:26%,freq:1,curPos:3 }
{ term:u571,freq:1,curPos:4 }
{ term:capital,freq:1,curPos:7 }
{ term:frozen,freq:1,curPos:9 }
{ term:benefits,freq:1,curPos:10 }
{ term:google,freq:1,curPos:11 }
{ term:hahahahahahahahahahahahah,freq:1,curPos:12 }
{ term:ha,freq:1,curPos:13 }
{ term:frozen,freq:1,curPos:14 }
{ term:google,freq:1,curPos:15 }
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{ docId = 0,docPath = D:\IdeaWorkspace\SeachEngine/text/2.txttuples: 
{ term:activity,freq:1,curPos:0 }
{ term:destination,freq:1,curPos:1 }
{ term:emergency,freq:1,curPos:2 }
{ term:26%,freq:1,curPos:3 }
{ term:u571,freq:1,curPos:4 }
{ term:capital,freq:1,curPos:7 }
{ term:frozen,freq:1,curPos:9 }
{ term:benefits,freq:1,curPos:10 }
{ term:google,freq:1,curPos:11 }
{ term:hahahahahahahahahahahahah,freq:1,curPos:12 }
{ term:ha,freq:1,curPos:13 }
{ term:frozen,freq:1,curPos:14 }
{ term:google,freq:1,curPos:15 }
}
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@4b53f538]" started-at="2021-05-16T02:50:29Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-05-16T02:50:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId = 0,docPath = G:/Daily_Files/Study_Files/gitFolder/CourseProject/javaCourseProject/Experiment1Test/test/config/..//text/2.txttuples: 
{ term:activity,freq:1,curPos:0 }
{ term:destination,freq:1,curPos:1 }
{ term:emergency,freq:1,curPos:2 }
{ term:capital,freq:1,curPos:7 }
{ term:frozen,freq:1,curPos:9 }
{ term:benefits,freq:1,curPos:10 }
{ term:google,freq:1,curPos:11 }
{ term:frozen,freq:1,curPos:14 }
{ term:google,freq:1,curPos:15 }
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{ docId = 0,docPath = D:\IdeaWorkspace\SeachEngine/text/2.txttuples: 
{ term:activity,freq:1,curPos:0 }
{ term:destination,freq:1,curPos:1 }
{ term:emergency,freq:1,curPos:2 }
{ term:capital,freq:1,curPos:7 }
{ term:frozen,freq:1,curPos:9 }
{ term:benefits,freq:1,curPos:10 }
{ term:google,freq:1,curPos:11 }
{ term:frozen,freq:1,curPos:14 }
{ term:google,freq:1,curPos:15 }
}
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@4b53f538]" started-at="2021-05-16T02:50:29Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-05-16T02:50:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId = 0,docPath = G:/Daily_Files/Study_Files/gitFolder/CourseProject/javaCourseProject/Experiment1Test/test/config/..//text/2.txttuples: 
{ term:activity,freq:1,curPos:0 }
{ term:destination,freq:1,curPos:1 }
{ term:emergency,freq:1,curPos:2 }
{ term:because,freq:1,curPos:5 }
{ term:hence,freq:1,curPos:6 }
{ term:capital,freq:1,curPos:7 }
{ term:i,freq:1,curPos:8 }
{ term:frozen,freq:1,curPos:9 }
{ term:benefits,freq:1,curPos:10 }
{ term:google,freq:1,curPos:11 }
{ term:hahahahahahahahahahahahah,freq:1,curPos:12 }
{ term:ha,freq:1,curPos:13 }
{ term:frozen,freq:1,curPos:14 }
{ term:google,freq:1,curPos:15 }
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{ docId = 0,docPath = D:\IdeaWorkspace\SeachEngine/text/2.txttuples: 
{ term:activity,freq:1,curPos:0 }
{ term:destination,freq:1,curPos:1 }
{ term:emergency,freq:1,curPos:2 }
{ term:because,freq:1,curPos:5 }
{ term:hence,freq:1,curPos:6 }
{ term:capital,freq:1,curPos:7 }
{ term:i,freq:1,curPos:8 }
{ term:frozen,freq:1,curPos:9 }
{ term:benefits,freq:1,curPos:10 }
{ term:google,freq:1,curPos:11 }
{ term:hahahahahahahahahahahahah,freq:1,curPos:12 }
{ term:ha,freq:1,curPos:13 }
{ term:frozen,freq:1,curPos:14 }
{ term:google,freq:1,curPos:15 }
}
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@4b53f538]" started-at="2021-05-16T02:50:29Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-05-16T02:50:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId = 0,docPath = G:/Daily_Files/Study_Files/gitFolder/CourseProject/javaCourseProject/Experiment1Test/test/config/..//text/2.txttuples: 
{ term:activity,freq:1,curPos:0 }
{ term:destination,freq:1,curPos:1 }
{ term:emergency,freq:1,curPos:2 }
{ term:26%,freq:1,curPos:3 }
{ term:u571,freq:1,curPos:4 }
{ term:because,freq:1,curPos:5 }
{ term:hence,freq:1,curPos:6 }
{ term:capital,freq:1,curPos:7 }
{ term:frozen,freq:1,curPos:9 }
{ term:benefits,freq:1,curPos:10 }
{ term:google,freq:1,curPos:11 }
{ term:frozen,freq:1,curPos:14 }
{ term:google,freq:1,curPos:15 }
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{ docId = 0,docPath = D:\IdeaWorkspace\SeachEngine/text/2.txttuples: 
{ term:activity,freq:1,curPos:0 }
{ term:destination,freq:1,curPos:1 }
{ term:emergency,freq:1,curPos:2 }
{ term:26%,freq:1,curPos:3 }
{ term:u571,freq:1,curPos:4 }
{ term:because,freq:1,curPos:5 }
{ term:hence,freq:1,curPos:6 }
{ term:capital,freq:1,curPos:7 }
{ term:frozen,freq:1,curPos:9 }
{ term:benefits,freq:1,curPos:10 }
{ term:google,freq:1,curPos:11 }
{ term:frozen,freq:1,curPos:14 }
{ term:google,freq:1,curPos:15 }
}
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testTestBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@4b53f538]" started-at="2021-05-16T02:50:29Z" name="testTestBuild" data-provider="testDocumentBuilder" finished-at="2021-05-16T02:50:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId = 0,docPath = G:/Daily_Files/Study_Files/gitFolder/CourseProject/javaCourseProject/Experiment1Test/test/config/..//text/2.txttuples: 
{ term:activity,freq:1,curPos:0 }
{ term:destination,freq:1,curPos:1 }
{ term:emergency,freq:1,curPos:2 }
{ term:capital,freq:1,curPos:7 }
{ term:frozen,freq:1,curPos:9 }
{ term:benefits,freq:1,curPos:10 }
{ term:google,freq:1,curPos:11 }
{ term:frozen,freq:1,curPos:14 }
{ term:google,freq:1,curPos:15 }
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{ docId = 0,docPath = D:\IdeaWorkspace\SeachEngine/text/2.txttuples: 
{ term:activity,freq:1,curPos:0 }
{ term:destination,freq:1,curPos:1 }
{ term:emergency,freq:1,curPos:2 }
{ term:capital,freq:1,curPos:7 }
{ term:frozen,freq:1,curPos:9 }
{ term:benefits,freq:1,curPos:10 }
{ term:google,freq:1,curPos:11 }
{ term:frozen,freq:1,curPos:14 }
{ term:google,freq:1,curPos:15 }
}
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestBuild -->
        <test-method signature="testTestBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@4b53f538]" started-at="2021-05-16T02:50:29Z" name="testTestBuild" data-provider="testDocumentBuilder" finished-at="2021-05-16T02:50:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId = 0,docPath = G:/Daily_Files/Study_Files/gitFolder/CourseProject/javaCourseProject/Experiment1Test/test/config/..//text/2.txttuples: 
{ term:activity,freq:1,curPos:0 }
{ term:destination,freq:1,curPos:1 }
{ term:emergency,freq:1,curPos:2 }
{ term:capital,freq:1,curPos:7 }
{ term:frozen,freq:1,curPos:9 }
{ term:benefits,freq:1,curPos:10 }
{ term:google,freq:1,curPos:11 }
{ term:frozen,freq:1,curPos:14 }
{ term:google,freq:1,curPos:15 }
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{ docId = 0,docPath = D:\IdeaWorkspace\SeachEngine/text/2.txttuples: 
{ term:activity,freq:1,curPos:0 }
{ term:destination,freq:1,curPos:1 }
{ term:emergency,freq:1,curPos:2 }
{ term:capital,freq:1,curPos:7 }
{ term:frozen,freq:1,curPos:9 }
{ term:benefits,freq:1,curPos:10 }
{ term:google,freq:1,curPos:11 }
{ term:frozen,freq:1,curPos:14 }
{ term:google,freq:1,curPos:15 }
}
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestBuild -->
      </class> <!-- hust.cs.javacourse.search.index.DocumentBuilderTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentBuilderTest.java -->
    <test started-at="2021-05-16T02:50:29Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexTest.java" finished-at="2021-05-16T02:50:29Z" duration-ms="321">
      <class name="hust.cs.javacourse.search.index.IndexTest">
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractIndex, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@57f23557]" started-at="2021-05-16T02:50:29Z" name="testTestToString" data-provider="testIndex" finished-at="2021-05-16T02:50:29Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dictionary:activity benefits capital destination emergency fizzy frozen google marketplace medical notification peninsula pollution 
docId-----docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity---->{"docId":0,"freq":3,"positions":[0, 1, 6]}->{"docId":1,"freq":1,"positions":[0]}
benefits---->{"docId":0,"freq":2,"positions":[2, 7]}->{"docId":1,"freq":1,"positions":[10]}
capital---->{"docId":0,"freq":2,"positions":[3, 8]}->{"docId":1,"freq":1,"positions":[7]}
destination---->{"docId":0,"freq":2,"positions":[4, 9]}->{"docId":1,"freq":1,"positions":[1]}
emergency---->{"docId":0,"freq":1,"positions":[10]}->{"docId":1,"freq":1,"positions":[2]}
fizzy---->{"docId":0,"freq":1,"positions":[5]}
frozen---->{"docId":1,"freq":2,"positions":[9, 14]}
google---->{"docId":1,"freq":2,"positions":[11, 15]}
marketplace---->{"docId":2,"freq":1,"positions":[0]}
medical---->{"docId":2,"freq":1,"positions":[1]}
notification---->{"docId":2,"freq":1,"positions":[3]}
peninsula---->{"docId":2,"freq":1,"positions":[5]}
pollution---->{"docId":2,"freq":1,"positions":[7]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@ab7395e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testAddDocument([Lhust.cs.javacourse.search.index.AbstractIndex;, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@57f23557]" started-at="2021-05-16T02:50:29Z" name="testAddDocument" data-provider="testIndex" finished-at="2021-05-16T02:50:29Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractIndex;@7331196b]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{ docId = 1,docPath = D:\IdeaWorkspace\SeachEngine/text/2.txttuples: 
{ term:activity,freq:1,curPos:0 }
{ term:destination,freq:1,curPos:1 }
{ term:emergency,freq:1,curPos:2 }
{ term:capital,freq:1,curPos:7 }
{ term:frozen,freq:1,curPos:9 }
{ term:benefits,freq:1,curPos:10 }
{ term:google,freq:1,curPos:11 }
{ term:frozen,freq:1,curPos:14 }
{ term:google,freq:1,curPos:15 }
}
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDocument -->
        <test-method signature="testLoad(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@57f23557]" started-at="2021-05-16T02:50:29Z" name="testLoad" data-provider="testIndex" finished-at="2021-05-16T02:50:29Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dictionary:activity benefits capital destination emergency fizzy frozen google marketplace medical notification peninsula pollution 
docId-----docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity---->{"docId":0,"freq":3,"positions":[0, 1, 6]}->{"docId":1,"freq":1,"positions":[0]}
benefits---->{"docId":0,"freq":2,"positions":[2, 7]}->{"docId":1,"freq":1,"positions":[10]}
capital---->{"docId":0,"freq":2,"positions":[3, 8]}->{"docId":1,"freq":1,"positions":[7]}
destination---->{"docId":0,"freq":2,"positions":[4, 9]}->{"docId":1,"freq":1,"positions":[1]}
emergency---->{"docId":0,"freq":1,"positions":[10]}->{"docId":1,"freq":1,"positions":[2]}
fizzy---->{"docId":0,"freq":1,"positions":[5]}
frozen---->{"docId":1,"freq":2,"positions":[9, 14]}
google---->{"docId":1,"freq":2,"positions":[11, 15]}
marketplace---->{"docId":2,"freq":1,"positions":[0]}
medical---->{"docId":2,"freq":1,"positions":[1]}
notification---->{"docId":2,"freq":1,"positions":[3]}
peninsula---->{"docId":2,"freq":1,"positions":[5]}
pollution---->{"docId":2,"freq":1,"positions":[7]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[G:/Daily_Files/Study_Files/gitFolder/CourseProject/javaCourseProject/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoad -->
        <test-method signature="testSave(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@57f23557]" started-at="2021-05-16T02:50:29Z" name="testSave" data-provider="testIndex" finished-at="2021-05-16T02:50:29Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dictionary:activity benefits capital destination emergency fizzy frozen google marketplace medical notification peninsula pollution 
docId-----docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity---->{"docId":0,"freq":3,"positions":[0, 1, 6]}->{"docId":1,"freq":1,"positions":[0]}
benefits---->{"docId":0,"freq":2,"positions":[2, 7]}->{"docId":1,"freq":1,"positions":[10]}
capital---->{"docId":0,"freq":2,"positions":[3, 8]}->{"docId":1,"freq":1,"positions":[7]}
destination---->{"docId":0,"freq":2,"positions":[4, 9]}->{"docId":1,"freq":1,"positions":[1]}
emergency---->{"docId":0,"freq":1,"positions":[10]}->{"docId":1,"freq":1,"positions":[2]}
fizzy---->{"docId":0,"freq":1,"positions":[5]}
frozen---->{"docId":1,"freq":2,"positions":[9, 14]}
google---->{"docId":1,"freq":2,"positions":[11, 15]}
marketplace---->{"docId":2,"freq":1,"positions":[0]}
medical---->{"docId":2,"freq":1,"positions":[1]}
notification---->{"docId":2,"freq":1,"positions":[3]}
peninsula---->{"docId":2,"freq":1,"positions":[5]}
pollution---->{"docId":2,"freq":1,"positions":[7]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[G:/Daily_Files/Study_Files/gitFolder/CourseProject/javaCourseProject/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSave -->
        <test-method signature="testSearch(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractPostingList)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@57f23557]" started-at="2021-05-16T02:50:29Z" name="testSearch" data-provider="testIndex" finished-at="2021-05-16T02:50:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dictionary:activity benefits capital destination emergency fizzy frozen google marketplace medical notification peninsula pollution 
docId-----docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity---->{"docId":0,"freq":3,"positions":[0, 1, 6]}->{"docId":1,"freq":1,"positions":[0]}
benefits---->{"docId":0,"freq":2,"positions":[2, 7]}->{"docId":1,"freq":1,"positions":[10]}
capital---->{"docId":0,"freq":2,"positions":[3, 8]}->{"docId":1,"freq":1,"positions":[7]}
destination---->{"docId":0,"freq":2,"positions":[4, 9]}->{"docId":1,"freq":1,"positions":[1]}
emergency---->{"docId":0,"freq":1,"positions":[10]}->{"docId":1,"freq":1,"positions":[2]}
fizzy---->{"docId":0,"freq":1,"positions":[5]}
frozen---->{"docId":1,"freq":2,"positions":[9, 14]}
google---->{"docId":1,"freq":2,"positions":[11, 15]}
marketplace---->{"docId":2,"freq":1,"positions":[0]}
medical---->{"docId":2,"freq":1,"positions":[1]}
notification---->{"docId":2,"freq":1,"positions":[3]}
peninsula---->{"docId":2,"freq":1,"positions":[5]}
pollution---->{"docId":2,"freq":1,"positions":[7]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"docId":0,"freq":3,"positions":[0, 1, 6]}->{"docId":1,"freq":1,"positions":[0]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testGetDictionary(hust.cs.javacourse.search.index.AbstractIndex, java.util.Set)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@57f23557]" started-at="2021-05-16T02:50:29Z" name="testGetDictionary" data-provider="testIndex" finished-at="2021-05-16T02:50:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dictionary:activity benefits capital destination emergency fizzy frozen google marketplace medical notification peninsula pollution 
docId-----docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity---->{"docId":0,"freq":3,"positions":[0, 1, 6]}->{"docId":1,"freq":1,"positions":[0]}
benefits---->{"docId":0,"freq":2,"positions":[2, 7]}->{"docId":1,"freq":1,"positions":[10]}
capital---->{"docId":0,"freq":2,"positions":[3, 8]}->{"docId":1,"freq":1,"positions":[7]}
destination---->{"docId":0,"freq":2,"positions":[4, 9]}->{"docId":1,"freq":1,"positions":[1]}
emergency---->{"docId":0,"freq":1,"positions":[10]}->{"docId":1,"freq":1,"positions":[2]}
fizzy---->{"docId":0,"freq":1,"positions":[5]}
frozen---->{"docId":1,"freq":2,"positions":[9, 14]}
google---->{"docId":1,"freq":2,"positions":[11, 15]}
marketplace---->{"docId":2,"freq":1,"positions":[0]}
medical---->{"docId":2,"freq":1,"positions":[1]}
notification---->{"docId":2,"freq":1,"positions":[3]}
peninsula---->{"docId":2,"freq":1,"positions":[5]}
pollution---->{"docId":2,"freq":1,"positions":[7]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[activity, benefits, capital, destination, emergency, fizzy, frozen, google, marketplace, medical, notification, peninsula, pollution]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDictionary -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@57f23557]" started-at="2021-05-16T02:50:29Z" name="testWriteObject" data-provider="testIndex" finished-at="2021-05-16T02:50:29Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dictionary:activity benefits capital destination emergency fizzy frozen google marketplace medical notification peninsula pollution 
docId-----docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity---->{"docId":0,"freq":3,"positions":[0, 1, 6]}->{"docId":1,"freq":1,"positions":[0]}
benefits---->{"docId":0,"freq":2,"positions":[2, 7]}->{"docId":1,"freq":1,"positions":[10]}
capital---->{"docId":0,"freq":2,"positions":[3, 8]}->{"docId":1,"freq":1,"positions":[7]}
destination---->{"docId":0,"freq":2,"positions":[4, 9]}->{"docId":1,"freq":1,"positions":[1]}
emergency---->{"docId":0,"freq":1,"positions":[10]}->{"docId":1,"freq":1,"positions":[2]}
fizzy---->{"docId":0,"freq":1,"positions":[5]}
frozen---->{"docId":1,"freq":2,"positions":[9, 14]}
google---->{"docId":1,"freq":2,"positions":[11, 15]}
marketplace---->{"docId":2,"freq":1,"positions":[0]}
medical---->{"docId":2,"freq":1,"positions":[1]}
notification---->{"docId":2,"freq":1,"positions":[3]}
peninsula---->{"docId":2,"freq":1,"positions":[5]}
pollution---->{"docId":2,"freq":1,"positions":[7]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[G:/Daily_Files/Study_Files/gitFolder/CourseProject/javaCourseProject/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@57f23557]" started-at="2021-05-16T02:50:29Z" name="testReadObject" data-provider="testIndex" finished-at="2021-05-16T02:50:29Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dictionary:activity benefits capital destination emergency fizzy frozen google marketplace medical notification peninsula pollution 
docId-----docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity---->{"docId":0,"freq":3,"positions":[0, 1, 6]}->{"docId":1,"freq":1,"positions":[0]}
benefits---->{"docId":0,"freq":2,"positions":[2, 7]}->{"docId":1,"freq":1,"positions":[10]}
capital---->{"docId":0,"freq":2,"positions":[3, 8]}->{"docId":1,"freq":1,"positions":[7]}
destination---->{"docId":0,"freq":2,"positions":[4, 9]}->{"docId":1,"freq":1,"positions":[1]}
emergency---->{"docId":0,"freq":1,"positions":[10]}->{"docId":1,"freq":1,"positions":[2]}
fizzy---->{"docId":0,"freq":1,"positions":[5]}
frozen---->{"docId":1,"freq":2,"positions":[9, 14]}
google---->{"docId":1,"freq":2,"positions":[11, 15]}
marketplace---->{"docId":2,"freq":1,"positions":[0]}
medical---->{"docId":2,"freq":1,"positions":[1]}
notification---->{"docId":2,"freq":1,"positions":[3]}
peninsula---->{"docId":2,"freq":1,"positions":[5]}
pollution---->{"docId":2,"freq":1,"positions":[7]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[G:/Daily_Files/Study_Files/gitFolder/CourseProject/javaCourseProject/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
        <test-method signature="testOptimize(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractIndex)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@57f23557]" started-at="2021-05-16T02:50:29Z" name="testOptimize" data-provider="testIndex" finished-at="2021-05-16T02:50:29Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dictionary:activity benefits capital destination emergency fizzy frozen google marketplace medical notification peninsula pollution 
docId-----docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity---->{"docId":0,"freq":3,"positions":[0, 1, 6]}->{"docId":1,"freq":1,"positions":[0]}
benefits---->{"docId":0,"freq":2,"positions":[2, 7]}->{"docId":1,"freq":1,"positions":[10]}
capital---->{"docId":0,"freq":2,"positions":[3, 8]}->{"docId":1,"freq":1,"positions":[7]}
destination---->{"docId":0,"freq":2,"positions":[4, 9]}->{"docId":1,"freq":1,"positions":[1]}
emergency---->{"docId":0,"freq":1,"positions":[10]}->{"docId":1,"freq":1,"positions":[2]}
fizzy---->{"docId":0,"freq":1,"positions":[5]}
frozen---->{"docId":1,"freq":2,"positions":[9, 14]}
google---->{"docId":1,"freq":2,"positions":[11, 15]}
marketplace---->{"docId":2,"freq":1,"positions":[0]}
medical---->{"docId":2,"freq":1,"positions":[1]}
notification---->{"docId":2,"freq":1,"positions":[3]}
peninsula---->{"docId":2,"freq":1,"positions":[5]}
pollution---->{"docId":2,"freq":1,"positions":[7]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dictionary:activity benefits capital destination emergency fizzy frozen google marketplace medical notification peninsula pollution 
docId-----docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity---->{"docId":0,"freq":3,"positions":[0, 1, 6]}->{"docId":1,"freq":1,"positions":[0]}
benefits---->{"docId":0,"freq":2,"positions":[2, 7]}->{"docId":1,"freq":1,"positions":[10]}
capital---->{"docId":0,"freq":2,"positions":[3, 8]}->{"docId":1,"freq":1,"positions":[7]}
destination---->{"docId":0,"freq":2,"positions":[4, 9]}->{"docId":1,"freq":1,"positions":[1]}
emergency---->{"docId":0,"freq":1,"positions":[10]}->{"docId":1,"freq":1,"positions":[2]}
fizzy---->{"docId":0,"freq":1,"positions":[5]}
frozen---->{"docId":1,"freq":2,"positions":[9, 14]}
google---->{"docId":1,"freq":2,"positions":[11, 15]}
marketplace---->{"docId":2,"freq":1,"positions":[0]}
medical---->{"docId":2,"freq":1,"positions":[1]}
notification---->{"docId":2,"freq":1,"positions":[3]}
peninsula---->{"docId":2,"freq":1,"positions":[5]}
pollution---->{"docId":2,"freq":1,"positions":[7]}
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptimize -->
        <test-method signature="testGetDocName(hust.cs.javacourse.search.index.AbstractIndex, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@57f23557]" started-at="2021-05-16T02:50:29Z" name="testGetDocName" data-provider="testIndex" finished-at="2021-05-16T02:50:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dictionary:activity benefits capital destination emergency fizzy frozen google marketplace medical notification peninsula pollution 
docId-----docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity---->{"docId":0,"freq":3,"positions":[0, 1, 6]}->{"docId":1,"freq":1,"positions":[0]}
benefits---->{"docId":0,"freq":2,"positions":[2, 7]}->{"docId":1,"freq":1,"positions":[10]}
capital---->{"docId":0,"freq":2,"positions":[3, 8]}->{"docId":1,"freq":1,"positions":[7]}
destination---->{"docId":0,"freq":2,"positions":[4, 9]}->{"docId":1,"freq":1,"positions":[1]}
emergency---->{"docId":0,"freq":1,"positions":[10]}->{"docId":1,"freq":1,"positions":[2]}
fizzy---->{"docId":0,"freq":1,"positions":[5]}
frozen---->{"docId":1,"freq":2,"positions":[9, 14]}
google---->{"docId":1,"freq":2,"positions":[11, 15]}
marketplace---->{"docId":2,"freq":1,"positions":[0]}
medical---->{"docId":2,"freq":1,"positions":[1]}
notification---->{"docId":2,"freq":1,"positions":[3]}
peninsula---->{"docId":2,"freq":1,"positions":[5]}
pollution---->{"docId":2,"freq":1,"positions":[7]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3f9342d4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocName -->
      </class> <!-- hust.cs.javacourse.search.index.IndexTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexTest.java -->
    <test started-at="2021-05-16T02:50:29Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexBuilderTest.java" finished-at="2021-05-16T02:50:29Z" duration-ms="24">
      <class name="hust.cs.javacourse.search.index.IndexBuilderTest">
        <test-method signature="testBuildIndex(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractIndex)[pri:0, instance:hust.cs.javacourse.search.index.IndexBuilderTest@5f71c76a]" started-at="2021-05-16T02:50:29Z" name="testBuildIndex" data-provider="testIndexBuilder" finished-at="2021-05-16T02:50:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dictionary:activity benefits capital destination emergency fizzy frozen google marketplace medical notification peninsula pollution 
docId-----docPath mapping
0---->G:\Daily_Files\Study_Files\gitFolder\CourseProject\javaCourseProject\Experiment1Test\test\text\1.txt
1---->G:\Daily_Files\Study_Files\gitFolder\CourseProject\javaCourseProject\Experiment1Test\test\text\2.txt
2---->G:\Daily_Files\Study_Files\gitFolder\CourseProject\javaCourseProject\Experiment1Test\test\text\3.txt
PostingList:
activity---->{"docId":0,"freq":3,"positions":[0, 1, 6]}->{"docId":1,"freq":1,"positions":[0]}
benefits---->{"docId":0,"freq":2,"positions":[2, 7]}->{"docId":1,"freq":1,"positions":[10]}
capital---->{"docId":0,"freq":2,"positions":[3, 8]}->{"docId":1,"freq":1,"positions":[7]}
destination---->{"docId":0,"freq":2,"positions":[4, 9]}->{"docId":1,"freq":1,"positions":[1]}
emergency---->{"docId":0,"freq":1,"positions":[10]}->{"docId":1,"freq":1,"positions":[2]}
fizzy---->{"docId":0,"freq":1,"positions":[5]}
frozen---->{"docId":1,"freq":2,"positions":[9, 14]}
google---->{"docId":1,"freq":2,"positions":[11, 15]}
marketplace---->{"docId":2,"freq":1,"positions":[0]}
medical---->{"docId":2,"freq":1,"positions":[1]}
notification---->{"docId":2,"freq":1,"positions":[3]}
peninsula---->{"docId":2,"freq":1,"positions":[5]}
pollution---->{"docId":2,"freq":1,"positions":[7]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dictionary:activity benefits capital destination emergency fizzy frozen google marketplace medical notification peninsula pollution 
docId-----docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity---->{"docId":0,"freq":3,"positions":[0, 1, 6]}->{"docId":1,"freq":1,"positions":[0]}
benefits---->{"docId":0,"freq":2,"positions":[2, 7]}->{"docId":1,"freq":1,"positions":[10]}
capital---->{"docId":0,"freq":2,"positions":[3, 8]}->{"docId":1,"freq":1,"positions":[7]}
destination---->{"docId":0,"freq":2,"positions":[4, 9]}->{"docId":1,"freq":1,"positions":[1]}
emergency---->{"docId":0,"freq":1,"positions":[10]}->{"docId":1,"freq":1,"positions":[2]}
fizzy---->{"docId":0,"freq":1,"positions":[5]}
frozen---->{"docId":1,"freq":2,"positions":[9, 14]}
google---->{"docId":1,"freq":2,"positions":[11, 15]}
marketplace---->{"docId":2,"freq":1,"positions":[0]}
medical---->{"docId":2,"freq":1,"positions":[1]}
notification---->{"docId":2,"freq":1,"positions":[3]}
peninsula---->{"docId":2,"freq":1,"positions":[5]}
pollution---->{"docId":2,"freq":1,"positions":[7]}
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildIndex -->
      </class> <!-- hust.cs.javacourse.search.index.IndexBuilderTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexBuilderTest.java -->
    <test started-at="2021-05-16T02:50:29Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/HitTest.java" finished-at="2021-05-16T02:50:29Z" duration-ms="57">
      <class name="hust.cs.javacourse.search.query.HitTest">
        <test-method signature="testGetDocId(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@50de0926]" started-at="2021-05-16T02:50:29Z" name="testGetDocId" data-provider="testHit" finished-at="2021-05-16T02:50:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0
docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
content:activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
score:-3.0
TermPostingMapping:
activity---->{"docId":0,"freq":3,"positions":[0, 1, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetDocId(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@50de0926]" started-at="2021-05-16T02:50:29Z" name="testGetDocId" data-provider="testHit" finished-at="2021-05-16T02:50:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1
docPath:D:\IdeaWorkspace\SeachEngine\text\2.txt
content:activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
score:-1.0
TermPostingMapping:
activity---->{"docId":1,"freq":1,"positions":[0]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@50de0926]" started-at="2021-05-16T02:50:29Z" name="testGetDocPath" data-provider="testHit" finished-at="2021-05-16T02:50:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1
docPath:D:\IdeaWorkspace\SeachEngine\text\2.txt
content:activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
score:-1.0
TermPostingMapping:
activity---->{"docId":1,"freq":1,"positions":[0]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:\IdeaWorkspace\SeachEngine\text\2.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@50de0926]" started-at="2021-05-16T02:50:29Z" name="testGetDocPath" data-provider="testHit" finished-at="2021-05-16T02:50:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0
docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
content:activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
score:-3.0
TermPostingMapping:
activity---->{"docId":0,"freq":3,"positions":[0, 1, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:\IdeaWorkspace\SeachEngine\text\1.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@50de0926]" started-at="2021-05-16T02:50:29Z" name="testGetContent" data-provider="testHit" finished-at="2021-05-16T02:50:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0
docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
content:activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
score:-3.0
TermPostingMapping:
activity---->{"docId":0,"freq":3,"positions":[0, 1, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@50de0926]" started-at="2021-05-16T02:50:29Z" name="testGetContent" data-provider="testHit" finished-at="2021-05-16T02:50:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1
docPath:D:\IdeaWorkspace\SeachEngine\text\2.txt
content:activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
score:-1.0
TermPostingMapping:
activity---->{"docId":1,"freq":1,"positions":[0]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@50de0926]" started-at="2021-05-16T02:50:29Z" name="testSetContent" data-provider="testHit" finished-at="2021-05-16T02:50:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1
docPath:D:\IdeaWorkspace\SeachEngine\text\2.txt
content:new content2
score:-1.0
TermPostingMapping:
activity---->{"docId":1,"freq":1,"positions":[0]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[new content2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@50de0926]" started-at="2021-05-16T02:50:29Z" name="testSetContent" data-provider="testHit" finished-at="2021-05-16T02:50:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0
docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
content:new content1
score:-3.0
TermPostingMapping:
activity---->{"docId":0,"freq":3,"positions":[0, 1, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[new content1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testGetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@50de0926]" started-at="2021-05-16T02:50:29Z" name="testGetScore" data-provider="testHit" finished-at="2021-05-16T02:50:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1
docPath:D:\IdeaWorkspace\SeachEngine\text\2.txt
content:activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
score:-1.0
TermPostingMapping:
activity---->{"docId":1,"freq":1,"positions":[0]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetScore -->
        <test-method signature="testGetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@50de0926]" started-at="2021-05-16T02:50:29Z" name="testGetScore" data-provider="testHit" finished-at="2021-05-16T02:50:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0
docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
content:activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
score:-3.0
TermPostingMapping:
activity---->{"docId":0,"freq":3,"positions":[0, 1, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetScore -->
        <test-method signature="testSetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@50de0926]" started-at="2021-05-16T02:50:29Z" name="testSetScore" data-provider="testHit" finished-at="2021-05-16T02:50:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1
docPath:D:\IdeaWorkspace\SeachEngine\text\2.txt
content:activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
score:1.0
TermPostingMapping:
activity---->{"docId":1,"freq":1,"positions":[0]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetScore -->
        <test-method signature="testSetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@50de0926]" started-at="2021-05-16T02:50:29Z" name="testSetScore" data-provider="testHit" finished-at="2021-05-16T02:50:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0
docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
content:activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
score:3.0
TermPostingMapping:
activity---->{"docId":0,"freq":3,"positions":[0, 1, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetScore -->
        <test-method signature="testGetTermPostingMapping(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@50de0926]" started-at="2021-05-16T02:50:29Z" name="testGetTermPostingMapping" data-provider="testHit" finished-at="2021-05-16T02:50:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0
docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
content:activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
score:-3.0
TermPostingMapping:
activity---->{"docId":0,"freq":3,"positions":[0, 1, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTermPostingMapping -->
        <test-method signature="testGetTermPostingMapping(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@50de0926]" started-at="2021-05-16T02:50:29Z" name="testGetTermPostingMapping" data-provider="testHit" finished-at="2021-05-16T02:50:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1
docPath:D:\IdeaWorkspace\SeachEngine\text\2.txt
content:activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
score:-1.0
TermPostingMapping:
activity---->{"docId":1,"freq":1,"positions":[0]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTermPostingMapping -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.query.AbstractHit, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@50de0926]" started-at="2021-05-16T02:50:29Z" name="testTestToString" data-provider="testHit" finished-at="2021-05-16T02:50:29Z" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0
docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
content:activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
score:-3.0
TermPostingMapping:
activity---->{"docId":0,"freq":3,"positions":[0, 1, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2ea6e30c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.query.AbstractHit;, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@50de0926]" started-at="2021-05-16T02:50:29Z" name="testCompareTo" data-provider="testHit" finished-at="2021-05-16T02:50:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@561868a0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
      </class> <!-- hust.cs.javacourse.search.query.HitTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/HitTest.java -->
    <test started-at="2021-05-16T02:50:29Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/IndexSearcherTest.java" finished-at="2021-05-16T02:50:29Z" duration-ms="44">
      <class name="hust.cs.javacourse.search.index.PostingListTest">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@6eceb130]" started-at="2021-05-16T02:50:28Z" name="beforeSuite" finished-at="2021-05-16T02:50:28Z" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
      </class> <!-- hust.cs.javacourse.search.index.PostingListTest -->
      <class name="hust.cs.javacourse.search.query.IndexSearcherTest">
        <test-method signature="testSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@de3a06f]" started-at="2021-05-16T02:50:29Z" name="testSearch" data-provider="testIndexSearcher" finished-at="2021-05-16T02:50:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@59b38691]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@2e2ff723]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@de3a06f]" started-at="2021-05-16T02:50:29Z" name="testSearch" data-provider="testIndexSearcher" finished-at="2021-05-16T02:50:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@a22cb6a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@5dd1c9f2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testTestSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@de3a06f]" started-at="2021-05-16T02:50:29Z" name="testTestSearch" data-provider="testIndexSearcher" finished-at="2021-05-16T02:50:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@324a0017]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@6187d1f5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestSearch -->
      </class> <!-- hust.cs.javacourse.search.query.IndexSearcherTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/IndexSearcherTest.java -->
  </suite> <!-- All Test Suite -->
</testng-results>
